package com.sample.hardware.joystick.SampleApp;

import android.app.Activity;
import android.app.Service;
import android.content.ComponentName;
import android.content.Intent;
import android.content.ServiceConnection;
import android.os.Bundle;
import android.os.IBinder;
import android.os.RemoteException;
import android.util.Log;

import com.sample.hardware.joystick.*;

public class JoystickAppActivity extends Activity {
 
	private static final String TAG = "JoystickTest";
	private IJoystick api = null;
	/** Called when the activity is first created. */
    @Override
    public void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.main);
        
	Intent intent = new Intent("com.sample.android.service.JoystickService");
	bindService(intent, serviceConnection, Service.BIND_AUTO_CREATE);
    }

	public void onDestroy(){
		super.onDestroy();
                        unbindService(serviceConnection);
	}

	private JoystickCallback.Stub jsCallback = new JoystickCallback.Stub() {
		
		public void onKeyPress(int arg0) throws RemoteException {
			// TODO Auto-generated method stub
			// update UI in GUI thread
			final int prevKeypress = arg0;
			runOnUiThread(new Runnable() {
				
				public void run() {
					// TODO Auto-generated method stub
					updateUI(prevKeypress);
				}
			});
		}
	};
	
	int prevKeypress = 0;
	private void updateUI() {
		// use prevKeypress
	}
        private ServiceConnection serviceConnection = new ServiceConnection() {

                public void onServiceConnected(ComponentName name, IBinder service) {
                        Log.i(TAG, "Service connection established");
                        api = IJoystick.Stub.asInterface(service);
                        try {
							api.setCallback(jsCallback);
						} catch (RemoteException e) {
							// TODO Auto-generated catch block
							e.printStackTrace();
						}

                }

                public void onServiceDisconnected(ComponentName name) {
                        Log.i(TAG, "Service connection disconnected");
                }
        };

}
